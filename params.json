{"name":"ShipIt.js","body":"# ShipIt.js\r\n\r\n  NPM package release management tool\r\n\r\n## Installation\r\n\r\n    npm install shipitjs\r\n\r\nor\r\n\r\n    git clone git://github.com/hideo55/shipitjs.git\r\n    npm install ./shipitjs\r\n\r\n## Usage\r\n\r\n    Usage: shipitjs [options] [command]\r\n    \r\n    Commands:\r\n    \r\n      init \r\n      Initialize: write default configuration file to ./.shipit.json\r\n      \r\n      release [release-type]\r\n      Release the package to NPM. release-type is [major|minor|patch|build|custom].\r\n    \r\n    Options:\r\n    \r\n      -h, --help     output usage information\r\n      -v, --version  output the version number\r\n      -x, --exec      Run command actually(default Dry-Run mode)\r\n\r\nCreate configuration file.\r\n\r\n    $ cd /path/to/module\r\n    $ shipitjs init\r\n\r\nExecute release command with Dry-Run mode.\r\n\r\n    $ shipitjs release patch\r\n    \r\nExecute release command actually.\r\n\r\n    $ shipitjs -x release patch\r\n\r\n## Semantic Versioning\r\n\r\nShipIt.js does semantic version control by `shipitjs release [rerease-type]` command.\r\n\r\nThe version string must be formatted as follows:\r\n\r\n    0.0.1 (major.minor.patch)\r\n\r\nor\r\n\r\n    0.0.1-1 (major.minor.patch-build)\r\n\r\nFor example, if current version is '0.0.1', the next version as follows:\r\n\r\n* Next major version is '1.0.0'\r\n* Next minor version is '0.1.0'\r\n* Next patch version is '0.0.2'\r\n* Next build version is '0.0.1-1'\r\n\r\nSee also [Semantic Versioning](http://semver.org/)\r\n\r\n## Configuration\r\n\r\nShipItJS can configuration by .shipit.json file.\r\n\r\nDefault configuration file can created by `shipitjs init` command.\r\n\r\nDefault configuration is like below\r\n\r\n    {\r\n      \"steps\": [\"FindVersion\", \"ChangeVersion\", \"CheckChangeLog\", \"Commit\", \"Tag\", \"Publish\"],\r\n      \"CheckChangeLog\": {\r\n        \"files\": [\"History.md\"]\r\n      }\r\n    }\r\n\r\n## Steps\r\n\r\n### FindVersion\r\n\r\nFind current version form package.json and VCS tag, and generate next version string that follow semantic versioning.\r\n\r\n### ChangeVersion\r\n\r\nChange version number in package.json and exports.version in main script.\r\n\r\n\r\n### CheckChangeLog\r\n\r\nCheck ChangeLog file \r\n\r\n* files\r\n\r\nPlease specify the filename of ChangeLog in an array.\r\n\r\n    {\r\n    \t\"CheckChangeLog\": {\r\n    \t\t\"files\": [\"History.md\"]\r\n    \t}\r\n    }\r\n\r\n### Commit\r\n\r\nCommit to VCS\r\n\r\n### Tag\r\n\r\nTagging the version number to VCS.\r\n\r\n### Publish\r\n\r\nPublish module to NPM registry.\r\n\r\n## VC (Version Control)\r\n\r\nShipItJS currently support Git and Mercurial.\r\n\r\n### Git\r\n\r\nVC's git support can configuration like below\r\n\r\n    {\r\n      \"vc\": {\r\n        \"Git\": {\r\n          \"TagPattern\": \"version-%v\",\r\n          \"SignTag\": true,\r\n          \"PushTo\": \"origin\"\r\n        }\r\n      }\r\n    }\r\n\r\n* PushTo\r\n\r\nIf you want the new version to be pushed elsewhare, then you can specify the destination in this. \r\n\r\n* TagPattern\r\n\r\nIf you want tag to be follow specify pattern, then you can specify tag pattern.'%v' is replaced by version string.\r\n\r\n* SignTag\r\n\r\nShould be set ot truely if you wish tags to be GPG/PGP signed.\r\n\r\n### Mercurial\r\n\r\nVC's mercurial support can configuration like below\r\n\r\n    {\r\n      \"vc\": {\r\n        \"Hg\": {\r\n          \"PushTo\": \"remote\"\r\n        }\r\n      }\r\n    }\r\n\r\n* PushTo\r\n\r\nIf you want the new version to be pushed elsewhare, then you can specify the destination in this. \r\n\r\n## License \r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2011 Hideaki Ohno &lt;hide.o.j55{at}gmail.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","tagline":"NPM package release management tool","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}